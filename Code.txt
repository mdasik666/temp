from bs4 import BeautifulSoup

bugfile = '''
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>sddsdsd</h1>
    <div>
        <h1>sdsadsa</h1>
        <p>hvhdgsvgh</p>
    </div>
</body>
</html>
'''

correctfile = '''
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <div>
        <h1>sdsadsa</h1>
        <p>ddad</p>
        <p>hvhdgsvgh</p>
    </div>
</body>
</html>
'''

def compare_html(bug_soup, correct_soup, report, bug_path="", correct_path=""):
    """Recursively compare HTML elements, attributes, and content."""
    
    bug_elements = {tag.name: tag for tag in bug_soup.find_all(True, recursive=False)}
    correct_elements = {tag.name: tag for tag in correct_soup.find_all(True, recursive=False)}

    # Check for missing elements in bugfile
    for tag in correct_elements:
        if tag not in bug_elements:
            report.append({"report": f"Missing <{tag}> in bug file at {correct_path}/{tag}"})

    # Check for extra elements in bugfile
    for tag in bug_elements:
        if tag not in correct_elements:
            report.append({"report": f"Extra <{tag}> in bug file at {bug_path}/{tag}"})

    # Compare elements that exist in both
    for tag in bug_elements:
        if tag in correct_elements:
            bug_tag = bug_elements[tag]
            correct_tag = correct_elements[tag]

            # Compare attributes
            bug_attrs = bug_tag.attrs
            correct_attrs = correct_tag.attrs
            for attr, value in correct_attrs.items():
                if attr not in bug_attrs:
                    report.append({"report": f"Missing attribute '{attr}' in <{tag}> at {correct_path}/{tag}"})
                elif bug_attrs[attr] != value:
                    report.append({"report": f"Different attribute '{attr}' in <{tag}> at {bug_path}/{tag} (expected: {value}, found: {bug_attrs[attr]})"})

            for attr in bug_attrs:
                if attr not in correct_attrs:
                    report.append({"report": f"Extra attribute '{attr}' in <{tag}> at {bug_path}/{tag}"})

            # Compare content (text inside the tag)
            if bug_tag.get_text(strip=True) != correct_tag.get_text(strip=True):
                report.append({"report": f"Different content in <{tag}> at {bug_path}/{tag} (expected: '{correct_tag.get_text(strip=True)}', found: '{bug_tag.get_text(strip=True)}')"})

            # Recursively compare child elements
            compare_html(bug_tag, correct_tag, report, bug_path + "/" + tag, correct_path + "/" + tag)

# Parse HTML
bug_soup = BeautifulSoup(bugfile, 'html.parser')
correct_soup = BeautifulSoup(correctfile, 'html.parser')

# Store differences
report = []
compare_html(bug_soup, correct_soup, report)

# Output the report
for item in report:
    print(item)
